{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/rest.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\n\nconst routes: Routes = [\n{ path: '', component: HomeComponent },\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'website';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n    NgbModule\n  ],\n  providers: [HttpClientModule],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \".navbar {\\n    margin-bottom: 30px;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxvQkFBb0I7Q0FDdkIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5uYXZiYXIge1xuICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XG59XG4iXX0= */\"","module.exports = \"<nav class=\\\"navbar sticky-top navbar-dark bg-dark\\\">\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">ASInt Project</a>\\n    <a [hidden]=\\\"!hideLogin\\\" class=\\\"navbar-brand\\\" href=\\\"#\\\">Logout</a>\\n</nav>\\n\\n<div [hidden]=\\\"hideLogin\\\" class=\\\"container text-center\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"loginRedirect()\\\">Login</button>\\n</div>\\n\\n\\n<div [hidden]=\\\"!hideLogin\\\" class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <h1>Welcome {{istid}}!</h1>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-6\\\">\\n            <form class=\\\"mb-4\\\">\\n                <div class=\\\"form-group mb-3\\\">\\n                    <label>Latitude:</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"latitude\\\" [(ngModel)]=\\\"position.latitude\\\" name=\\\"latitude\\\">\\n                </div>\\n                <div class=\\\"form-goup mb-3\\\">\\n                    <label>Longitude:</label>\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"longitude\\\" [(ngModel)]=\\\"position.longitude\\\" name=\\\"longitude\\\">\\n                </div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"getLocation()\\\">Get Location <i class=\\\"fas fa-location-arrow\\\"></i></button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"sendLocation()\\\">Send Location</button>\\n            </form>\\n\\n            <form class=\\\"mb-4\\\">\\n                <div class=\\\"form-group mb-3\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"distance\\\" [(ngModel)]=\\\"distance\\\" name=\\\"distance\\\">\\n                </div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setDistance()\\\">Set distance</button>\\n            </form>\\n\\n            <form class=\\\"mb-4\\\">\\n                <div class=\\\"form-group mb-3\\\">\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"message\\\" [(ngModel)]=\\\"message\\\" name=\\\"message\\\">\\n                </div>\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"sendMessage()\\\">Send message</button>\\n            </form>\\n\\n            <form class=\\\"mb-4\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-primary mr-3\\\" (click)=\\\"getMessages()\\\">Get messages</button>\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger mr-3\\\" (click)=\\\"clearMessages()\\\">Clear messages</button>\\n                Refresh time:\\n                <select [(ngModel)]=\\\"messagesRefreshTime\\\" name=\\\"name\\\">\\n                    <option>1</option>\\n                    <option>2</option>\\n                    <option>5</option>\\n                    <option>10</option>\\n                </select> s\\n            </form>\\n\\n            <ul class=\\\"list-group list-group-flush\\\">\\n                <li class=\\\"list-group-item\\\" *ngFor=\\\"let message of messages\\\">\\n                    {{message}}\\n                </li>\\n            </ul>\\n\\n        </div>\\n        <div class=\\\"col-6\\\">\\n            <h2>Nearby users:</h2>\\n            <div class=\\\"mb-3\\\">\\n                Refresh time:\\n                <select [(ngModel)]=\\\"usersRefreshTime\\\">\\n                    <option>1</option>\\n                    <option>2</option>\\n                    <option>5</option>\\n                    <option>10</option>\\n                </select> s\\n            </div>\\n            <div class=\\\"row\\\" class=\\\"mb-3\\\">\\n                <div class=\\\"col\\\">\\n                    <p>In {{distance}} meters range:</p>\\n                    <ul class=\\\"list-group\\\">\\n                        <li class=\\\"list-group-item\\\" *ngFor=\\\"let user of usersLocation\\\">\\n                            {{user}}\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n            <div class=\\\"row\\\" class=\\\"mb-3\\\">\\n                <div class=\\\"col\\\">\\n                    <p>Building: {{building}}</p>\\n                    <ul class=\\\"list-group\\\">\\n                        <li class=\\\"list-group-item\\\" *ngFor=\\\"let user of usersBuilding\\\">\\n                            {{user}}\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { RestService } from '../rest.service';\nimport * as jwt_decode from \"jwt-decode\";\nimport { tokenName } from '@angular/compiler';\nimport { timer } from 'rxjs';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  token: any;\n  res: any;\n  istid: string;\n  hideLogin = false;\n  distance;\n  message = \"\";\n\n  position = {latitude:null, longitude:null}\n\n  messages = [];\n\n  usersRefreshTime = 5;\n  messagesRefreshTime = 5;\n\n  usersTimer = this.usersRefreshTime;\n  messagesTimer = this.messagesRefreshTime;\n\n  usersTimerOn = false;\n\n  usersBuilding = [];\n  usersLocation = [];\n\n  building;\n\n\n  constructor(\n    public rest:RestService,\n    private route: ActivatedRoute,\n    ) {\n\n    this.route.queryParams.subscribe(params => {\n      let code = params['code'];\n      console.log(code);\n      if(code != null){\n        this.rest.login(code).subscribe((res) => {\n          console.log(\"2 \" + res);\n          this.token = res.token;\n          let tokenInfo = this.getDecodedAccessToken(this.token); // decode token\n          let expireDate = tokenInfo.exp; // get token expiration dateTime\n          this.istid = tokenInfo.istid;\n          this.distance = res.distance;\n          console.log(tokenInfo); // show decoded token object in console\n          if(this.token != null){\n            this.hideLogin = true;\n            this.refreshMessages();\n          }\n          console.log(\"1 \" + this.token + this.hideLogin);\n          });\n        }\n\n\n\n      /*this.token = params['token'];\n      let tokenInfo = this.getDecodedAccessToken(this.token); // decode token\n      let expireDate = tokenInfo.exp; // get token expiration dateTime\n      this.istid = tokenInfo.istid;\n      console.log(tokenInfo); // show decoded token object in console\n      if(this.token != null){\n        this.hideLogin = true;\n      }\n      console.log(\"1 \" + this.token + this.hideLogin);*/\n    });\n  }\n\n  ngOnInit() {\n  /*  console.log(this.token)\n    if(this.token != null){\n      this.rest.login(this.token).subscribe((data: {}) => {\n        console.log(\"2 \" + data);\n        this.res = data;\n      });\n    }*/\n  }\n\n  loginRedirect() {\n    let url = '***REMOVED***';\n    window.open(url, '_self');\n  }\n\n  getLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.position.latitude = position.coords.latitude;\n        this.position.longitude = position.coords.longitude;\n\n        console.log(\"Latitude: \" + position.coords.latitude);\n        console.log(\"Longitude: \" + position.coords.longitude);\n      });\n    } else {\n      alert(\"Geolocation is not supported by this browser.\");\n    }\n  }\n\n  sendLocation() {\n    let data = {latitude:this.position.latitude, longitude:this.position.longitude}\n    this.rest.sendLocation(data, this.token).subscribe((res) => {\n      this.building = res.building;\n      this.refreshUsers();\n      this.getNearbyUsers();\n    });\n\n  }\n\n  setDistance() {\n    let data = {distance:this.distance}\n    this.rest.setDistance(data, this.token).subscribe((res) => {\n      this.res = res;\n    });\n\n  }\n\n  sendMessage() {\n    let data = {message:this.message}\n    this.rest.sendMessage(data, this.token).subscribe((res) => {\n      this.res = res;\n    });\n\n  }\n\n  getMessages() {\n    this.rest.getMessages(this.token).subscribe((res) => {\n      this.messages = this.messages.concat(res.messages);\n    });\n\n  }\n\n  clearMessages() {\n    this.messages = [];\n  }\n\n  getNearbyUsers() {\n    this.rest.getNearbyUsers(this.token).subscribe((res) => {\n      this.usersBuilding = res.users.building;\n      this.usersLocation = res.users.location;\n    });\n\n  }\n\n\n  getDecodedAccessToken(token: string): any {\n    try{\n        return jwt_decode(token);\n    }\n    catch(Error){\n        return null;\n    }\n  }\n\n  refreshUsers() {\n    if(this.usersTimerOn == false){\n      this.usersTimerOn = true;\n      const source = timer(0, 1000);\n      const abc = source.subscribe(val => {\n        this.usersTimer--;\n        if(this.usersTimer == 0){\n          this.usersTimer = this.usersRefreshTime;\n          this.getNearbyUsers();\n        }\n      });\n    }\n  }\n\n  refreshMessages() {\n    const source = timer(0, 1000);\n    const abc = source.subscribe(val => {\n      this.messagesTimer--;\n      if(this.messagesTimer == 0){\n        this.messagesTimer = this.messagesRefreshTime;\n        this.getMessages();\n      }\n    });\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { map, catchError, tap } from 'rxjs/operators';\n\nconst endpoint = 'http://localhost:5000/api/users/';\n/*const httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type':  'application/json'\n  })\n};*/\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RestService {\n\n  constructor(private http: HttpClient) { }\n\n  private extractData(res: Response) {\n    let body = res;\n    return body || { };\n  }\n\n  private httpOptions(token) {\n    return {headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'Authorization': token\n    })}\n  }\n\n  login(code): Observable<any> {\n    const params = new HttpParams().set('code', code);\n    return this.http.get(endpoint + 'login', {params}).pipe(\n      map(this.extractData));\n  }\n\n  sendLocation(data, token): Observable<any> {\n    console.log(data);\n    return this.http.post<any>(endpoint + 'sendLocation', JSON.stringify(data), this.httpOptions(token)).pipe(\n      tap((res) => console.log(res)),\n      catchError(this.handleError<any>('sendLocation'))\n    );\n  }\n\n  setDistance(data, token): Observable<any> {\n    console.log(data);\n    return this.http.post<any>(endpoint + 'setDistance', JSON.stringify(data), this.httpOptions(token)).pipe(\n      tap((res) => console.log(res)),\n      catchError(this.handleError<any>('setDistance'))\n    );\n  }\n\n  sendMessage(data, token): Observable<any> {\n    console.log(data);\n    return this.http.post<any>(endpoint + 'sendMessage', JSON.stringify(data), this.httpOptions(token)).pipe(\n      tap((res) => console.log(res)),\n      catchError(this.handleError<any>('sendMessage'))\n    );\n  }\n\n  getMessages(token): Observable<any> {\n    return this.http.get(endpoint + 'getMessages', this.httpOptions(token)).pipe(\n      map(this.extractData));\n    }\n\n  getNearbyUsers(token): Observable<any> {\n    return this.http.get(endpoint + 'getNearbyUsers', this.httpOptions(token)).pipe(\n      map(this.extractData));\n  }\n\n  private handleError<T> (operation = 'operation', result?: T) {\n    return (error: any): Observable<T> => {\n\n      // TODO: send the error to remote logging infrastructure\n      console.error(\"REST ERROR: \" + error); // log to console instead\n\n      // TODO: better job of transforming error for user consumption\n      console.log(`${operation} failed: ${error.message}`);\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}